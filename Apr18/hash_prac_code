 use strict;
 use warnings;
 my $ds = {
            abc => [1,2,3],
            def => [4,5,6],
            ghi => {
                    lmn => { 
                        abc => 'foo',
                        ijk => 'bar'
                    }
                    },
            xyz => [10,
                    ['a','b','c'],
                    5]
 };


print "answer no 1-->\n";
foreach my $i(keys %$ds){
  
  my $val=$ds->{$i};
      if( my @arr=@$val){
=pod          
            for (my $i=0;$i<=#$arr;i++){
                  
        
                   
            if(my @a=@$arr[i]){
               print "@a\n";
            }else{
   print "$arr[i]\n";
 } 
         
}
=cut
print "@arr\n";
}
}
=pod
print "answer no 2--->\n";
my $hash_ref=$ds->{ghi}{lmn};
        my %hash=%$hash_ref;
    foreach my $i(%hash){
	  if($i eq 'ijk'){
             $hash{$i}='bar1';
}
       
}
print "$hash{ijk}\n";



print "acess element b---->\n";


my $array_ref=$ds->{xyz};


my @arr=@$array_ref;
my $arr_add=$arr[1];
my @arr1=@$arr_add;
print "$arr1[1]\n";

print "delete value 5---->\n";
my $array_ref=$ds->{xyz};


my @arr=@$array_ref;
my $del=pop(@arr);
print $del,"\n";
print "@arr\n";

print "add another key-valur pair---->\n";
my $hash_ref=$ds->{ghi}{lmn};
        my %hash=%$hash_ref;
         $hash{rohan}='ghosh';
          while((my $key,my $value)=each(%hash)){

              print $key.",".$value."\n";
           }

print 'del key-value pair--->\n';
   my %hash=%$ds;
   delete($hash{'def'});
     while((my $key,my $value)=each(%hash)){

              print $key.",".$value."\n";
           }


=cut
